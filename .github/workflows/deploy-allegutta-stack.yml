name: Deploy allegutta

on:
  release:
    types: [published]

jobs:

  build-publish-proxy:

    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          tags: |
            type=semver,pattern={{version}}
          images: |
            bisand/allegutta-proxy

      - name: Build and push allegutta-proxy Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.proxy
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-publish-api:

    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          tags: |
            type=semver,pattern={{version}}
          images: |
            bisand/allegutta-api

      - name: Build and push allegutta-api Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.api
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-publish-web:

    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          tags: |
            type=semver,pattern={{version}}
          images: |
            bisand/allegutta-web

      - name: Build and push allegutta-web Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.web
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-allegutta:
    needs: [build-publish-proxy, build-publish-web, build-publish-api]
    runs-on: ubuntu-latest
    steps:

      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Sleep for 10 seconds
        run: sleep 10s
        shell: bash

      - name: Step 1 - Echo out a GitHub Actions Secret to the logs
        run: |
          echo "The GitHub Action Secret will be masked:  "
          echo "${{ secrets.NORDNET_USERNAME }}"
          echo "Trick to echo GitHub Actions Secret:  "
          echo "${{ secrets.NORDNET_USERNAME }}" | sed 's/./& /g' 

      - name: Deploy stack to Portainer
        uses: carlrygart/portainer-stack-deploy@v1
        with:
          # url of Poratainer instance
          portainer-host: ${{ secrets.PORTAINER_HOST }}

          # portainer auth
          username: ${{ secrets.PORTAINER_USERNAME }}
          password: ${{ secrets.PORTAINER_PASSWORD }}

          # internal portainer cluster id
          endpoint-id: 4

          # stack name
          stack-name: allegutta

          # docker stack file location
          stack-definition: portainer-stack.yml

          # vars to substitute in stack
          template-variables: | 
            {
              "NORDNET_USERNAME":"${{ secrets.NORDNET_USERNAME }}",
              "NORDNET_PASSWORD":"${{ secrets.NORDNET_PASSWORD }}",
              "MYSQL_ROOT_PASSWORD":"${{ secrets.MYSQL_ROOT_PASSWORD }}",
              "MYSQL_DATABASE":"${{ secrets.MYSQL_DATABASE }}",
              "MYSQL_USER":"${{ secrets.MYSQL_USER }}",
              "MYSQL_PASSWORD":"${{ secrets.MYSQL_PASSWORD }}"
            }
